The ``2-matrix_divided`` module
===============================

Using ``matrix_divided``
------------------------

This is an example text file in reStructuredText format.  First import ``matrix_divided`` from the ``2-matrix_divided`` module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

    >>> matrix_divided([[0]], 1)
    [[0.0]]
    >>> matrix_divided([[float('inf')]], 2)
    [[inf]]
    >>> matrix_divided([[float('inf')]], -2)
    [[-inf]]
    >>> matrix_divided([[float('inf')]], float('inf'))
    [[nan]]
    >>> matrix_divided([[float('nan')]], 2)
    [[nan]]
    >>> matrix_divided([[float('nan')]], float('nan'))
    [[nan]]
    >>> matrix_divided([[]], 0)
    [[]]
    >>> matrix_divided([[]], float('nan'))
    [[]]
    >>> matrix_divided([], 1)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix_divided()
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
    >>> matrix_divided([[0]], 1, None)
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() takes 2 positional arguments but 3 were given
    >>> matrix_divided(None, None)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[0]], None)
    Traceback (most recent call last):
        ...
    TypeError: div must be a number
    >>> matrix_divided([[0], []], None)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[0]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero
    >>> matrix_divided([[float('nan')]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

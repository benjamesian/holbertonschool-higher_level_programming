The ``0-add_integer`` module
============================

Using ``add_integer``
---------------------

This is an example text file in reStructuredText format.  First import ``add_integer`` from the ``0-add_integer`` module:

    >>> add_integer = __import__('0-add_integer').add_integer

Now use it:

    >>> add_integer(4, 6)
    10

    >>> add_integer(3.2, 3.2)
    6

    >>> add_integer(2, -2)
    0

    >>> add_integer(10.1, -2)
    8

    >>> add_integer(0)
    98

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
        ...
    ValueError: cannot convert float NaN to integer
    >>> add_integer()
    Traceback (most recent call last):
        ...
    TypeError: add_integer() missing 1 required positional argument: 'a'
    >>> add_integer(1,1,1)
    Traceback (most recent call last):
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
    >>> add_integer(float('inf'))
    Traceback (most recent call last):
        ...
    OverflowError: cannot convert float infinity to integer
    >>> add_integer(None)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer("howdy", 10)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(10, "howdy")
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer
